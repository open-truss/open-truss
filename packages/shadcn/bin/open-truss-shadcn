#!/bin/bash

echo "open-truss-shadcn binary"
# Directory of open-truss project
# Return first instance of reference in case there are multiple. e.g.
# when a package also references the package
package_dir=$(npm ls -p @open-truss/shadcn | head -n 1)

# Check if package_dir is empty. If empty then we are inside of the OT repository
if [ -z "$package_dir" ]; then
  package_dir=$(pwd)
fi

# Specify the directory where scripts are located
scripts_dir="$package_dir/bin"

# Function to print the list of scripts
print_script_list() {
  echo "Available commands:"
  current_script_name=$(basename "$0")
  for script_file in "$scripts_dir"/*; do
    if [ -f "$script_file" ] && [ -x "$script_file" ]; then
      script_name=$(basename "$script_file")
      if [ "$script_name" != "$current_script_name" ]; then
        echo "open-truss-shadcn $script_name"
      fi
    fi
  done
}

# Check if the --help or -h flag is passed
if [ "$1" == "--help" ] || [ "$1" == "-h" ]; then
  print_script_list
  exit 0
fi

# Check if an argument (script name) is provided
if [ $# -lt 1 ]; then
  echo "Usage: $0 <script-name> [script-arguments]"
  exit 1
fi

# Store the script name provided as an argument
script_name="$1"
shift 1 # Remove the script name from the argument list

# Check if the script name contains any directory traversal (e.g., ../)
if [[ "$script_name" != *"/"* ]]; then
  # Combine the scripts directory and script name
  script_path="$scripts_dir/$script_name"

  # Check if the script file exists in the scripts directory
  if [ ! -f "$script_path" ]; then
    echo "Error: The specified command '$script_name' does not exist"
    exit 1
  fi

  # Execute the script
  PACKAGE_DIR=$package_dir "$script_path" "$@"
else
  echo "Error: Invalid script name."
  exit 1
fi
