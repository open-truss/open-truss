workflow:
  version: 1
  _DEBUG_: true
  signals:
    repo_name: string
    repo_owner: string
    results:
      total_count: number
      incomplete_results: boolean
    graphql_results:
      data:
        repository:
          issues:
            totalCount: number
  frames:
    - frame:
      view:
        component: OTRestDataProvider
        props:
          source: rest-demo
          path:
            template: /search/issues?q=repo:${repo_owner}/${repo_name}+is:${issue_or_pr}
            repo_name: :repo_name
            repo_owner: :repo_owner
            issue_or_pr: issue
          method: GET
          output: [:results]
          headers:
            User-Agent: open-truss-rest-demo
      frames:
        - frame:
          view:
            component: RepoNameOwnerInput
            props:
              repo_name: :repo_name
              repo_owner: :repo_owner
        - frame:
          view:
            component: DataDemo
            props:
              results: :results
    - frame:
      view:
        component: OTRestDataProvider
        props:
          source: auth-github-demo
          path: /graphql
          method: POST
          output: [:graphql_results]
          headers:
            Content-Type: application/json
            User-Agent: open-truss-rest-demo
          body:
            template: '{"query": "query { repository(name: \"${repo_name}\", owner: \"${repo_owner}\") { issues(first: 1) { totalCount } } }"}'
            repo_name: :repo_name
            repo_owner: :repo_owner
      frames:
        - frame:
          view:
            component: DataDemo
            props:
              results: :graphql_results
