workflow:
  version: 1
  _DEBUG_: true
  signals:
    repoName: string
    repoOwner: string
    results:
      total_count: number
      incomplete_results: boolean
    graphqlResults:
      data:
        repository:
          issues:
            totalCount: number
  frames:
    - frame:
      view:
        component: OTRestDataProvider
        props:
          source: rest-demo
          path:
            template: /search/issues?q=repo:${repoOwner}/${repoName}+is:${issue_or_pr}
            repoName: :repoName
            repoOwner: :repoOwner
            issue_or_pr: issue
          method: GET
          output: [:results]
          headers:
            User-Agent: open-truss-rest-demo
      frames:
        - frame:
          view:
            component: RepoNameOwnerInput
            props:
              repoName: :repoName
              repoOwner: :repoOwner
        - frame:
          view:
            component: DataDemo
            props:
              results: :results
    - frame:
      view:
        component: OTRestDataProvider
        props:
          source: auth-github-demo
          path: /graphql
          method: POST
          output: [:graphqlResults]
          headers:
            Content-Type: application/json
            User-Agent: open-truss-rest-demo
          body:
            template: '{"query": "query { repository(name: \"${repoName}\", owner: \"${repoOwner}\") { issues(first: 1) { totalCount } } }"}'
            repoName: :repoName
            repoOwner: :repoOwner
      frames:
        - frame:
          view:
            component: DataDemo
            props:
              results: :graphqlResults
