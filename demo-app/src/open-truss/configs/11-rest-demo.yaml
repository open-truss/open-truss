workflow:
  version: 1
  _DEBUG_: true
  signals:
    repo_nwo_input: string
    repo_nwo_i: string
    results:
      total_count: number
      incomplete_results: boolean
    graphql_results:
      data:
        publicRepositories:
          nodes:
            - issues:
                totalCount: number

  frames:
    - frame:
      view:
        component: OTRestDataProvider
        props:
          source: rest-demo
          path:
            template: /search/issues?q=repo:${repo_nwo}+is:${issue_or_pr}
            repo_nwo: :repo_nwo_input
            issue_or_pr: issue
          method: GET
          output: [:results]
          headers:
            User-Agent: open-truss-rest-demo
      frames:
        - frame:
          view:
            component: StringInput
            props:
              string: :repo_nwo_input
        - frame:
          view:
            component: DataDemo
            props:
              results: :results
    - frame:
      view:
        component: OTRestDataProvider
        props:
          source: local-graphql-demo
          path: /graphql
          method: POST
          output: [:graphql_results]
          headers:
            Content-Type: application/json
            User-Agent: open-truss-rest-demo
          body:
            template: '{"query": "query { publicRepositories(namesWithOwners: ["open-truss/open-truss"], first: 1) { nodes { issues(first: 1) { totalCount } } } }"}'
            repo_nwo_i: :repo_nwo_i
      frames:
        - frame:
          view:
            component: StringInput
            props:
              string: :repo_nwo_i
        - frame:
          view:
            component: DataDemo
            props:
              results: :graphql_results
